require('dotenv').config();
const mysql = require('mysql2');
const db = mysql.createConnection(
    {
      host: 'localhost',
      user: process.env.DB_USER,
      password: process.env.DB_PASSWORD,
      database: 'employee'
    },
    console.log(`Connected to the employee database.`)
  );

function viewDepartments (init){
  const query = 'SELECT id AS Department_ID, name AS Department_Name FROM department';
  db.query(query, (err, results) => {
    if (err) {
      console.error('Error:', err);
    } else {
      console.table(results);
      init();
    }
  });
}
function viewRoles (init){
  const query = `
    SELECT 
      role.id AS Role_ID, 
      role.title AS Job_Title, 
      role.salary AS Salary, 
      department.name AS Department_Name
    FROM role
    INNER JOIN department ON role.department_id = department.id
  `;
  db.query(query, (err, results) => {
    if (err) {
      console.error('Error:', err);
    } else {
      console.table(results);
      init();
    }
  });
}
function viewEmployees (init){
  const query = `
    SELECT 
      employee.id AS Employee_ID,
      employee.first_name AS First_Name,
      employee.last_name AS Last_Name,
      role.title AS Job_Title,
      department.name AS Department,
      role.salary AS Salary,
      CONCAT(manager.first_name, ' ', manager.last_name) AS Manager
    FROM employee
    LEFT JOIN role ON employee.role_id = role.id
    LEFT JOIN department ON role.department_id = department.id
    LEFT JOIN employee manager ON employee.manager_id = manager.id
  `;
  db.query(query, (err, results) => {
    if (err) {
      console.error('Error:', err);
    } else {
      console.table(results);
      init();
    }
  });
}
function newDepartment (init){
  inquirer
    .prompt([
      {
        type: 'input',
        name: 'departmentName',
        message: 'Enter new department name:',
      },
    ])
    .then((answers) => {
      const query = 'INSERT INTO department (name) VALUES (?)';
      db.query(query, [answers.departmentName], (err, results) => {
        if (err) {
          console.error('Error:', err);
        } else {
          console.log(`Department '${answers.departmentName}' added successfully!`);
          init();
        }
      });
    })
    .catch((error) => {
      console.error('Error:', error);
    });
}
function newRole(init){
  const queryDepartments = 'SELECT id, name FROM department';
  db.query(queryDepartments, (err, departments) => {
    if (err) throw err;
    inquirer
      .prompt([
        {
          type: 'input',
          name: 'roleTitle',
          message: 'Enter new role:'
        },
        {
          type: 'input',
          name: 'roleSalary',
          message: 'Enter new role salary:',
          validate: (input) => !isNaN(input),
        },
        {
          type: 'list',
          name: 'departmentId',
          message: 'Select the department:',
          choices: departments.map((dept) => ({ name: dept.name, value: dept.id })),
        },
      ])
      .then((answers) => {
        const query = 'INSERT INTO role (title, salary, department_id) VALUES (?, ?, ?)';
        db.query(query, [answers.roleTitle, parseFloat(answers.roleSalary), answers.departmentId], (err, res) => {
          if (err) throw err;
          console.log(`Role '${answers.roleTitle}' added successfully!`);
          startApp();
        });
      })
      .catch((error) => {
        console.error('Error:', error);
      });
  });
}
function addEmployee(init){
  
}
function updateRole(init){
  
}
module.exports = {
  viewDepartments,
  viewEmployees,
  viewRoles,
  newDepartment,
  newRole,
  addEmployee,
  updateRole
}